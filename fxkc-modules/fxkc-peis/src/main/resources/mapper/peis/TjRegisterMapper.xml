<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.fxkc.peis.mapper.TjRegisterMapper">

    <select id="selectPage" resultType="org.fxkc.peis.domain.vo.TjRegisterPageVo">
        SELECT
            t1.ID,
            t1.HEALTHY_CHECK_CODE,
            t1.RECORD_CODE,
            t1.CREDENTIAL_TYPE,
            t1.CREDENTIAL_NUMBER,
            t1.BUSINESS_CATEGORY,
            t1.PHYSICAL_TYPE,
            t1.NAME,
            t1.MARRIAGE_STATUS,
            t1.AGE,
            t1.GENDER,
            t1.PHONE,
            t1.HEALTHY_CHECK_TIME,
            t1.GUIDE_SHEET_RECEIVED,
            t1.FREEZE_STATUS,
            t1.HEALTHY_CHECK_STATUS,
            t1.NEED_GENERAL_REVIEW,
            t1.COST_TYPE,
            t1.TOTAL_AMOUNT,
            t1.TEAM_AMOUNT,
            t1.PERSON_AMOUNT,
            t1.TEAM_ID,
            t1.TEAM_GROUP_ID,
            t1.TEAM_DEPT_ID,
            t1.INTRODUCER,
            t1.CREATE_BY,
            t1.REGISTER_DOCTOR_ID,
            t1.GENERAL_REVIEW_DOCTOR,
            t1.GENERAL_REVIEW_TIME,
            t1.AUDIT_DOCTOR,
            t1.AUDIT_TIME,
            t1.FINISH_TIME,
            t1.CANCEL_REGISTER_TIME,
            t1.CANCEL_REGISTER_OPERATOR,
            t1.CHECK_TYPE,
            t1.TASK_ID,
            t1.TEAM_SETTLE_TIME,
            t1.PAID_TOTAL_AMOUNT,
            t1.TOTAL_AMOUNT - PAID_TOTAL_AMOUNT as unPaidTotalAmount,
            t1.PE_TIMES
        FROM
            TJ_REGISTER t1
            left join TJ_TEAM_TASK t3 on t1.TASK_ID = t3.ID and t3.DEL_FLAG = '0'
                and (t3.IS_REVIEW = '1' or t3.REVIEW_RESULT = '1')
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.createByName)">
                LEFT JOIN SYS_USER t2 on t1.CREATE_BY = t2.USER_ID
            </if>
        <where>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.delFlag)">
                AND t1.DEL_FLAG = #{bo.delFlag}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.status)">
                AND t1.STATUS = #{bo.status}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.healthyCheckCode)">
                AND t1.HEALTHY_CHECK_CODE LIKE CONCAT('%',CONCAT(#{bo.healthyCheckCode},'%'))
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.recordCode)">
                AND t1.RECORD_CODE LIKE CONCAT('%',CONCAT(#{bo.recordCode},'%'))
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.name)">
                AND t1.NAME LIKE CONCAT('%',CONCAT(#{bo.name},'%'))
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.gender)">
                AND t1.GENDER = #{bo.gender}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.credentialNumber)">
                AND LOWER(t1.CREDENTIAL_NUMBER) LIKE CONCAT('%',CONCAT(LOWER(#{bo.credentialNumber}),'%'))
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.physicalType)">
                AND t1.PHYSICAL_TYPE = #{bo.physicalType}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.businessCategory)">
                AND t1.BUSINESS_CATEGORY = #{bo.businessCategory}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.guideSheetReceived)">
                AND t1.GUIDE_SHEET_RECEIVED = #{bo.guideSheetReceived}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.freezeStatus)">
                AND t1.FREEZE_STATUS = #{bo.freezeStatus}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.healthyCheckStatus)">
                AND t1.HEALTHY_CHECK_STATUS = #{bo.healthyCheckStatus}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.teamId)">
                AND t1.TEAM_ID = #{bo.teamId}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.teamGroupId)">
                <if test="bo.teamGroupId == 0">
                    AND t1.TEAM_GROUP_ID is null
                </if>
                <if test="bo.teamGroupId != 0">
                    AND t1.TEAM_GROUP_ID = #{bo.teamGroupId}
                </if>
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.teamDeptId)">
                AND t1.TEAM_DEPT_ID = #{bo.teamDeptId}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.generalReviewDoctor)">
                AND t1.GENERAL_REVIEW_DOCTOR = #{bo.generalReviewDoctor}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.generalReviewTimeStart)">
                AND t1.GENERAL_REVIEW_TIME >= #{bo.generalReviewTimeStart}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.generalReviewTimeEnd)">
                AND t1.GENERAL_REVIEW_TIME &lt; TRUNC(#{bo.generalReviewTimeEnd})+1
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.healthyCheckTimeStart)">
                AND t1.HEALTHY_CHECK_TIME >= #{bo.healthyCheckTimeStart}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.healthyCheckTimeEnd)">
                AND t1.HEALTHY_CHECK_TIME &lt; TRUNC(#{bo.healthyCheckTimeEnd})+1
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.auditDoctor)">
                AND t1.AUDIT_DOCTOR = #{bo.auditDoctor}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.auditTimeStart)">
                AND t1.AUDIT_TIME >= #{bo.auditTimeStart}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.auditTimeEnd)">
                AND t1.AUDIT_TIME &lt; TRUNC(#{bo.auditTimeEnd})+1
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.cancelRegisterTimeStart)">
                AND t1.CANCEL_REGISTER_TIME >= #{bo.cancelRegisterTimeStart}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.cancelRegisterTimeEnd)">
                AND t1.CANCEL_REGISTER_TIME &lt; TRUNC(#{bo.cancelRegisterTimeEnd})+1
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.cancelRegisterOperator)">
                AND t1.CANCEL_REGISTER_OPERATOR = #{bo.cancelRegisterOperator}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.personCategory)">
                AND t1.PERSON_CATEGORY = #{bo.personCategory}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.registerTimeStart)">
                AND t1.REGISTER_TIME >= #{bo.registerTimeStart}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.registerTimeEnd)">
                AND t1.REGISTER_TIME &lt; TRUNC(#{bo.registerTimeEnd})+1
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.registerDoctorId)">
                AND t1.REGISTER_DOCTOR_ID = #{bo.registerDoctorId}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.chargeTimeStart)">
                AND t1.CHARGE_TIME >= #{bo.chargeTimeStart}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.chargeTimeEnd)">
                AND t1.CHARGE_TIME &lt; TRUNC(#{bo.chargeTimeEnd})+1
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.insMark)">
                AND t1.INS_MARK = #{bo.insMark}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.packageId)">
                AND t1.PACKAGE_ID = #{bo.packageId}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.checkType)">
                AND t1.CHECK_TYPE = #{bo.checkType}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.occupationalType)">
                AND t1.OCCUPATIONAL_TYPE = #{bo.occupationalType}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.taskId)">
                AND t1.TASK_ID = #{bo.taskId}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.teamSettleId)">
                AND t1.TEAM_SETTLE_ID = #{bo.teamSettleId}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.createByName)">
                AND t2.USER_NAME LIKE CONCAT('%',CONCAT(#{bo.createByName},'%'))
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.createTimeStart)">
                AND t1.CREATE_TIME >= #{bo.createTimeStart}
            </if>
            <if test="@org.fxkc.common.mybatis.helper.Ognl@isNotEmpty(bo.createTimeEnd)">
                AND t1.CREATE_TIME &lt; TRUNC(#{bo.createTimeEnd})+1
            </if>
        </where>
    </select>

    <select id="getByIds" resultType="org.fxkc.peis.domain.vo.TjRegisterVo">
        select * from TJ_REGISTER where id in
        <foreach collection="regIdList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="queryTaskRegisterExportById" resultType="org.fxkc.peis.domain.vo.TjTaskRegisterExportVo">
        select a.id,
            a.name,
            a.gender,
            a.age,
            a.credential_number,
            c.group_name,
            b.duty_status,
            a.healthy_check_status
        from tj_register a left join tj_register_zyb b on a.id = b.reg_id
                           left join tj_team_group c on a.team_group_id = c.id
        where a.del_flag = '0'
        and a.task_id = #{taskId}
    </select>

    <update id="updateTjRegisterTeamSettleNull">
        update TJ_REGISTER
        set TEAM_SETTLE_ID=null,TEAM_SETTLE_TIME=null,TEAM_CHARGE_STATUS='1'
        where TEAM_SETTLE_ID in
        <foreach collection="teamSettleIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="updateGuideSheetPrint">
        update TJ_REGISTER set GUIDE_PRINT_TIMES = GUIDE_PRINT_TIMES +1,HEALTHY_CHECK_STATUS = decode(HEALTHY_CHECK_STATUS,1, 2 , HEALTHY_CHECK_STATUS)
        where ID in
        <foreach collection="bo.regIdList" item="regId" open="(" separator="," close=")">
            #{regId}
        </foreach>
    </update>

    <update id="updatePersonalReportPrint">
        update TJ_REGISTER set REPORT_PRINT_FLAG = 1 ,REPORT_PRINT_TIME = sysdate,REPORT_PRINT_TIMES = REPORT_PRINT_TIMES+1
        where ID in
        <foreach collection="bo.regIdList" item="regId" open="(" separator="," close=")">
            #{regId}
        </foreach>
    </update>

    <select id="selectTjRegisterByProjectChecked" resultType="org.fxkc.peis.domain.TjRegister">
        select t1.id,
               sum(case when t2.check_status = '1' then t2.receivable_amount else 0 end) team_amount
        from tj_register t1
            left join tj_reg_combination_project t2 on t1.id = t2.register_id
        where t1.del_flag = '0'
          and t2.del_flag = '0'
          and t1.team_id = #{bo.teamId}
          and t1.task_id = #{bo.teamTaskId}
          and t1.team_settle_id is null
          and t1.healthy_check_status = '5'
        group by t1.id,t2.check_status,t1.healthy_check_status
    </select>

</mapper>
